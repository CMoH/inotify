@version 0.4.0
@title inotify - Erlang OTP application for Linux file monitoring
@doc

Introduction
------------

Inotify allows to monitor changes to files and directory in the
filesystem.  It uses Linux 'inotify' functions, hence the name.

This is an OTP application. When started files and directories can be
watched by calling 'inotify:watch(File, Tag)'. Tag is a user defined
term that will later be used to associate notification event listeners
to the specific events they are interested in.  All file notifications
are published via a gen_event.

Users can either write a full blown gen_event handler and add it to
'inotify_evt' via gen_event:add[_sup]_handler/3 or they can implement
the 'inotify_evt' behaviour and call 'inotify:add_handler(Tag, Module,
Args)'.  In that case Module:inotify_evt(...) will be called for each
event corresponding to 'Tag'.

Installation/Usage
------------------

If using as a dependency in another rebar project add this snippet to the projects
rebar.config:

  {deps, [
        ... other dependencies ...
        {inotify, ".*", {git, "https://github.com/sheyll/inotify.git"}}]}


The application must included in the reltool.config and the applications using
this application must have a corresponding entry in their '*.app' files.

This is an OTP application which must be started before it can be used
by other applications.

If building from git:

 ./rebar compile

You can play around with it by doing this:

 $ export ERL_LIBS=$(pwd) ; erl

 application:start(inotify).
 Ref = inotify:watch("/tmp").
 inotify:print_events(Ref).

Now add a file in "/tmp":

 touch /tmp/test_inotify

You should see some info being printed by inotify.
To stop watching:

 inotify:unwatch(Ref)
